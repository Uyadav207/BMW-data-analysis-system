version: "3.8"
services:
  postgresdb:
    image: postgres:latest
    environment:
      - POSTGRES_USER=${POSTGRESDB_USER}
      - POSTGRES_PASSWORD=${POSTGRESDB_ROOT_PASSWORD}
      - POSTGRES_DB=${POSTGRESDB_DATABASE}
    restart: always
    tty: true
    volumes:
      - ./data:/var/lib/postgresql/data
    ports: 
      - ${POSTGRESDB_LOCAL_PORT}:${POSTGRESDB_DOCKER_PORT}
    networks:
      - node-network

  nginx:
    build: 
      context: nginx
    container_name: nginx
    restart: always
    tty: true
    ports: 
      - "8000:80"
    networks: 
      - node-network
    depends_on:
       - back-end
       - front-end

  back-end:
    depends_on: 
      - postgresdb
    build:
      dockerfile: Dockerfile
      context: "./data-analysis-server"
    env_file: ./.env
    ports:
      - ${NODE_LOCAL_PORT}:${NODE_DOCKER_PORT}
    environment:
      - DB_HOST=${POSTGRES_DB_HOST}
      - DB_USER=${POSTGRESDB_USER}
      - DB_PASSWORD=${POSTGRESDB_ROOT_PASSWORD}
      - DB_NAME=${POSTGRESDB_DATABASE}
      - DB_PORT=${POSTGRESDB_DOCKER_PORT}
    volumes:
      - /app/node_modules
      - ./data-analysis-server:/app
    networks:
      - node-network

  front-end:
    stdin_open: true
    environment:
      - CHOKIDAR_USEPOLLING=true
    build:
      dockerfile: Dockerfile
      context: ./data-analysis-tool-frontend
    volumes:
      - /app/node_modules
      - ./data-analysis-tool-frontend:/app
    ports: 
      - "5173:5173"
    tty: true
    networks:
      - node-network
  
networks: 
  node-network:
    driver: bridge